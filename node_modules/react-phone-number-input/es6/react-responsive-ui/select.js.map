{"version":3,"sources":["../../source/react-responsive-ui/select.js"],"names":["React","PureComponent","PropTypes","ReactDOM","classNames","submit_parent_form","get_scrollbar_width","Empty_value_option_value","value_prop_type","oneOfType","string","number","bool","Select","props","options","value","autocomplete","children","menu","toggler","onChange","Error","state","matching_options","get_matching_options","Children","forEach","element","label","fallback","nativeExpanded","document","addEventListener","document_clicked","setState","javascript","resize_native_expanded_select","window","previous_props","previous_state","expanded","height","should_animate","undefined","calculate_height","removeEventListener","id","upward","scroll","alignment","saveOnIcons","native","disabled","required","placeholder","error","style","className","list_height","get_options","list_style","is_scrollable","maxHeight","overflow","overflown","list_items","map","index","icon","render_list_item","wrapper_style","textAlign","selected","get_selected_option","markup","select","ref","on_key_down_in_container","render_selected_item","value_is_empty","should_indicate_invalid","menu_toggler","cloneElement","onClick","toggle","length","list","render_static","scrollbarPadding","focused_option_value","is_focused","item_style","marginRight","button","extra_props","event","item_clicked","get_option_key","type","Separator","render_selected_item_only","native_expanded_select_container_style","concise","tabIndex","onFocus","inputClassName","autocomplete_width","autocomplete_input_value","selected_label","get_selected_option_label","selected_text","on_autocomplete_input_change","on_key_down","on_blur","title","name","native_select_on_change","render_native_select_options","child","empty_option_is_selected","empty_option_present","rendered_options","option","unshift","indicateInvalid","get_option","filter","x","indexOf","option_index","maxItems","vertical_padding","focus","preventDefault","callback","autocompleteShowAll","slice","i","option_element","findDOMNode","offset_top","offsetTop","is_first_option","firstChild","scrollTop","gravity","is_last_option","lastChild","top_line","bottom_line","offsetHeight","list_dom_node","border","parseInt","getComputedStyle","borderTopWidth","scrollHeight","paddingTop","scrollable_list_height","toLowerCase","verbose","propTypes","arrayOf","shape","node","isRequired","func","onBlur","object","oneOf","focusUponSelection","onTabOut","onToggle","defaultProps","target","width","offsetWidth","toggle_options","setTimeout","scroll_to","dont_focus_after_toggle","selected_option","options_list","contains","ctrlKey","altKey","shiftKey","metaKey","keyCode","previous","previous_focusable_option","show_option","next","next_focusable_option","_event","stopPropagation","input","display"],"mappings":";;;;;;AAAA;;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,YAAxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,2BAA2B,EAAjC;;AAEA,IAAMC,kBAAkBN,UAAUO,SAAV,CACvB,CACAP,UAAUQ,MADV,EAEAR,UAAUS,MAFV,EAGAT,UAAUU,IAHV,CADuB,CAAxB;;IAOqBC,M;;;AA2JpB,iBAAYC,KAAZ,EACA;AAAA;;AAGC;AACA;AAJD,+GACOA,KADP;;AAAA;;AAKC,QAAKC,OAAL,GAAe,EAAf;;AALD,MASEC,KATF,GAiBGF,KAjBH,CASEE,KATF;AAAA,MAUEC,YAVF,GAiBGH,KAjBH,CAUEG,YAVF;AAAA,MAWEF,OAXF,GAiBGD,KAjBH,CAWEC,OAXF;AAAA,MAYEG,QAZF,GAiBGJ,KAjBH,CAYEI,QAZF;AAAA,MAaEC,IAbF,GAiBGL,KAjBH,CAaEK,IAbF;AAAA,MAcEC,OAdF,GAiBGN,KAjBH,CAcEM,OAdF;AAAA,MAeEC,QAfF,GAiBGP,KAjBH,CAeEO,QAfF;;;AAmBC,MAAIJ,YAAJ,EACA;AACC,OAAI,CAACF,OAAL,EACA;AACC,UAAM,IAAIO,KAAJ,+DAAN;AACA;;AAED,SAAKC,KAAL,CAAWC,gBAAX,GAA8B,MAAKC,oBAAL,CAA0BV,OAA1B,EAAmCC,KAAnC,CAA9B;AACA;;AAED,MAAIE,YAAY,CAACC,IAAjB,EACA;AACCnB,SAAM0B,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiC,UAACU,OAAD,EACjC;AACC,QAAI,CAACA,QAAQd,KAAR,CAAcE,KAAnB,EACA;AACC,WAAM,IAAIM,KAAJ,4DAAN;AACA;;AAED,QAAI,CAACM,QAAQd,KAAR,CAAce,KAAnB,EACA;AACC,WAAM,IAAIP,KAAJ,4DAAN;AACA;AACD,IAXD;AAYA;;AAED,MAAIH,QAAQ,CAACC,OAAb,EACA;AACC,SAAM,IAAIE,KAAJ,kEAAN;AACA;;AAED,MAAI,CAACH,IAAD,IAAS,CAACE,QAAd,EACA;AACC,SAAM,IAAIC,KAAJ,uDAAN;AACA;AArDF;AAsDC;;AAED;;;;;sCAEA;AAAA,gBACsC,KAAKR,KAD3C;AAAA,OACSgB,QADT,UACSA,QADT;AAAA,OACmBC,cADnB,UACmBA,cADnB;;;AAGCC,YAASC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,gBAAxC;;AAEA,OAAIJ,QAAJ,EACA;AACC,SAAKK,QAAL,CAAc,EAAEC,YAAY,IAAd,EAAd;AACA;;AAED,OAAIL,cAAJ,EACA;AACC,SAAKM,6BAAL;AACAC,WAAOL,gBAAP,CAAwB,QAAxB,EAAkC,KAAKI,6BAAvC;AACA;AACD;;;qCAEkBE,c,EAAgBC,c,EACnC;AAAA,iBACmC,KAAK1B,KADxC;AAAA,OACSiB,cADT,WACSA,cADT;AAAA,OACyBf,KADzB,WACyBA,KADzB;AAAA,gBAE8B,KAAKO,KAFnC;AAAA,OAESkB,QAFT,UAESA,QAFT;AAAA,OAEmBC,MAFnB,UAEmBA,MAFnB;;;AAIC,OAAID,aAAaD,eAAeC,QAAhC,EACA;AACC,QAAIA,YAAY,KAAKE,cAAL,EAAhB,EACA;AACC,SAAID,WAAWE,SAAf,EACA;AACC,WAAKC,gBAAL;AACA;AACD;AACD;;AAED;AACA,OAAId,kBAAkBf,UAAUuB,eAAevB,KAA/C,EACA;AACC,SAAKqB,6BAAL;AACA;AACD;;;yCAGD;AAAA,OACSN,cADT,GAC4B,KAAKjB,KADjC,CACSiB,cADT;;;AAGCC,YAASc,mBAAT,CAA6B,OAA7B,EAAsC,KAAKZ,gBAA3C;;AAEA,OAAIH,cAAJ,EACA;AACCO,WAAOQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,6BAA1C;AACA;AACD;;;2BAGD;AAAA;;AAAA,iBAwBG,KAAKvB,KAxBR;AAAA,OAGEiC,EAHF,WAGEA,EAHF;AAAA,OAIEC,MAJF,WAIEA,MAJF;AAAA,OAKEC,MALF,WAKEA,MALF;AAAA,OAME/B,QANF,WAMEA,QANF;AAAA,OAOEC,IAPF,WAOEA,IAPF;AAAA,OAQEC,OARF,WAQEA,OARF;AAAA,OASE8B,SATF,WASEA,SATF;AAAA,OAUEjC,YAVF,WAUEA,YAVF;AAAA,OAWEkC,WAXF,WAWEA,WAXF;AAAA,OAYErB,QAZF,WAYEA,QAZF;AAAA,OAaEsB,MAbF,WAaEA,MAbF;AAAA,OAcErB,cAdF,WAcEA,cAdF;AAAA,OAeEsB,QAfF,WAeEA,QAfF;AAAA,OAgBEC,QAhBF,WAgBEA,QAhBF;AAAA,OAiBEC,WAjBF,WAiBEA,WAjBF;AAAA,OAkBE1B,KAlBF,WAkBEA,KAlBF;AAAA,OAmBEb,KAnBF,WAmBEA,KAnBF;AAAA,OAoBEwC,KApBF,WAoBEA,KApBF;AAAA,OAqBEC,KArBF,WAqBEA,KArBF;AAAA,OAsBEC,SAtBF,WAsBEA,SAtBF;AAAA,iBA+BG,KAAKnC,KA/BR;AAAA,OA4BEkB,QA5BF,WA4BEA,QA5BF;AAAA,OA6BEkB,WA7BF,WA6BEA,WA7BF;;;AAiCC,OAAM5C,UAAU,KAAK6C,WAAL,EAAhB;;AAEA,OAAIC,mBAAJ;;AAEA;AACA,OAAI,KAAKC,aAAL,MAAwB,KAAKvC,KAAL,CAAWoC,WAAX,KAA2Bf,SAAvD,EACA;AACCiB,iBAAa,EAAEE,WAAcJ,WAAd,OAAF,EAAb;AACA;;AAED,OAAMK,WAAWf,UAAUlC,OAAV,IAAqB,KAAKkD,SAAL,EAAtC;;AAEA,OAAIC,mBAAJ;;AAEA;AACA;AACA,OAAInD,OAAJ,EACA;AACCmD,iBAAanD,QAAQoD,GAAR,CAAY,gBAAyBC,KAAzB,EACzB;AAAA,SAD4BpD,KAC5B,QAD4BA,KAC5B;AAAA,SADmCa,KACnC,QADmCA,KACnC;AAAA,SAD0CwC,IAC1C,QAD0CA,IAC1C;;AACC,YAAO,OAAKC,gBAAL,CAAsB,EAAEF,YAAF,EAASpD,YAAT,EAAgBa,YAAhB,EAAuBwC,MAAM,CAAClB,WAAD,IAAgBkB,IAA7C,EAAmDL,kBAAnD,EAAtB,CAAP;AACA,KAHY,CAAb;AAIA;AACD;AACA;AARA,QAUA;AACCE,kBAAalE,MAAM0B,QAAN,CAAeyC,GAAf,CAAmBjD,QAAnB,EAA6B,UAACU,OAAD,EAAUwC,KAAV,EAC1C;AACC,UAAI,CAACxC,OAAL,EACA;AACC;AACA;;AAED,aAAO,OAAK0C,gBAAL,CAAsB,EAAEF,YAAF,EAASxC,gBAAT,EAAtB,CAAP;AACA,MARY,CAAb;AASA;;AAED,OAAM2C,gBAAgB,EAAEC,WAAWtB,SAAb,EAAtB;;AAEA,OAAMuB,WAAW,KAAKC,mBAAL,EAAjB;;AAEA,OAAMC,SAEL;AAAA;AAAA;AACC,UAAM;AAAA,aAAO,OAAKC,MAAL,GAAcC,KAArB;AAAA,MADP;AAEC,gBAAY,KAAKC,wBAFlB;AAGC,YAAQrB,qBAAac,aAAb,EAA+Bd,KAA/B,IAAyCc,aAHlD;AAIC,gBAAYnE,WAEX,cAFW,EAGX;AACC,oBAA4B0B,QAD7B;AAEC,4BAA4BX,IAF7B;AAGC,8BAA4B6B,MAH7B;AAIC,gCAA4BP,QAJ7B;AAKC,iCAA4B,CAACA,QAL9B;AAMC,gCAA4BY;AAN7B,MAHW,EAWXK,SAXW,CAJb;AAkBC;AAAA;AAAA;AACC,iBAAYtD,WACX;AACA,sBAAe,CAACe;AADhB,OADW,CADb;AAOG,MAACA,IAAD,IAAS,CAACiC,MAAV,IAAoB,KAAK2B,oBAAL,EAPvB;AAgBGlD,eAAU,KAAK6C,mBAAL,MAA8BnB,WAAxC,KACD;AAAA;AAAA;AACC,gBAAUR,EADX;AAEC,kBAAY3C,WAAW,mBAAX,EACZ;AACC,uCAAgCkD,YAAY0B,eAAehE,KAAf,CAD7C;AAEC,sCAAgC,KAAKiE,uBAAL;AAFjC,QADY,CAFb;AAOGpD;AAPH,MAjBF;AA6BGV,aACD;AAAA;AAAA;AACC,YAAM;AAAA,eAAO,OAAK+D,YAAZ;AAAA,QADP;AAEC,kBAAU,uBAFX;AAGGlF,YAAMmF,YAAN,CAAmB/D,OAAnB,EAA4B,EAAEgE,SAAU,KAAKC,MAAjB,EAA5B;AAHH,MA9BF;AAuCG,MAACjC,MAAD,IAAW,CAACrB,cAAZ,IAA8BmC,WAAWoB,MAAX,GAAoB,CAAlD,IACD;AAAA;AAAA;AACC,YAAM;AAAA,eAAO,OAAKC,IAAL,GAAYV,KAAnB;AAAA,QADP;AAEC,cAAQhB,UAFT;AAGC,kBAAYzD,WAEX,kBAFW,EAGX,2BAHW,EAIX,uBAJW,EAKX,cALW,EAMX;AACC,uCAAyCe,IAD1C;AAEC,sCAAyCsB,QAF1C;AAGC,2CAAyCA,QAH1C;AAIC,0CAAyCS,cAAc,MAJxD;AAKC,2CAAyCA,cAAc,OALxD;AAMC,+CAAyC,CAAChC,QAAD,IAAagC,cAAc,MANrE;AAOC,gDAAyC,CAAChC,QAAD,IAAagC,cAAc,OAPrE;AAQC;AACA,yCAAyCF,MAT1C;AAUC,2CAAyC,CAACA;AAV3C,QANW,CAHb;AAsBGkB;AAtBH,MAxCF;AAmEG,MAACd,UAAWtB,YAAY,CAAC,KAAKP,KAAL,CAAWa,UAApC,KAAoD,KAAKoD,aAAL;AAnEvD,KAlBD;AAyFG,SAAKP,uBAAL,MACD;AAAA;AAAA,OAAK,WAAU,mBAAf;AAAqCzB;AAArC;AA1FF,IAFD;;AAiGA,UAAOmB,MAAP;AACA;;;0CAEkE;AACnE;AAAA;;AAAA,OADmBP,KACnB,SADmBA,KACnB;AAAA,OAD0BxC,OAC1B,SAD0BA,OAC1B;AAAA,OADmCZ,KACnC,SADmCA,KACnC;AAAA,OAD0Ca,KAC1C,SAD0CA,KAC1C;AAAA,OADiDwC,IACjD,SADiDA,IACjD;AAAA,OADuDL,QACvD,SADuDA,QACvD;AAAA,iBAC8C,KAAKlD,KADnD;AAAA,OACSuC,QADT,WACSA,QADT;AAAA,OACmBlC,IADnB,WACmBA,IADnB;AAAA,OACyBsE,gBADzB,WACyBA,gBADzB;AAAA,iBAE4C,KAAKlE,KAFjD;AAAA,OAESmE,oBAFT,WAESA,oBAFT;AAAA,OAE+BjD,QAF/B,WAE+BA,QAF/B;;AAIC;AACA;;AACA,OAAIb,OAAJ,EACA;AACCZ,YAAQY,QAAQd,KAAR,CAAcE,KAAtB;AACA;;AAED,OAAM2E,aAAa,CAACxE,IAAD,IAASH,UAAU0E,oBAAtC;;AAEA,OAAIE,mBAAJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAI5B,YAAYyB,gBAAhB,EACA;AACCG,iBAAa,EAAEC,aAAavF,wBAAwB,IAAvC,EAAb;AACA;;AAED,OAAIwF,eAAJ;;AAEA;AACA;AACA,OAAIlE,OAAJ,EACA;AAAA;AACC,SAAMmE,cACN;AACCtC,aAAYmC,0BAAkBA,UAAlB,EAAiChE,QAAQd,KAAR,CAAc2C,KAA/C,IAAyD7B,QAAQd,KAAR,CAAc2C,KADpF;AAECC,iBAAYtD,WAEX,sBAFW,EAGX;AACC,wCAAkCuF;AADnC,OAHW,EAMX/D,QAAQd,KAAR,CAAc4C,SANH;AAFb,MADA;;AAaA,SAAM0B,UAAUxD,QAAQd,KAAR,CAAcsE,OAA9B;;AAEAW,iBAAYX,OAAZ,GAAsB,UAACY,KAAD,EACtB;AACC,UAAI7E,IAAJ,EACA;AACC,cAAKkE,MAAL;AACA,OAHD,MAKA;AACC,cAAKY,YAAL,CAAkBjF,KAAlB,EAAyBgF,KAAzB;AACA;;AAED,UAAIZ,OAAJ,EACA;AACCA,eAAQY,KAAR;AACA;AACD,MAfD;;AAiBAF,cAAS9F,MAAMmF,YAAN,CAAmBvD,OAAnB,EAA4BmE,WAA5B,CAAT;AAjCD;AAkCC;AACD;AACA;AArCA,QAuCA;AACCD,cAAS;AAAA;AAAA;AACR,aAAK,QADG;AAER,gBAAU;AAAA,eAAS,OAAKG,YAAL,CAAkBjF,KAAlB,EAAyBgF,KAAzB,CAAT;AAAA,QAFF;AAGR,iBAAW3C,QAHH;AAIR,iBAAS,IAJD;AAKR,kBAAYjD,WAEX,sBAFW,EAGX;AACC,yCAAkCuF,UADnC;AAEC;AACA,0CAAmCtC;AAHpC,QAHW,CALJ;AAcR,cAAQuC,UAdA;AAeNvB,cAAQrE,MAAMmF,YAAN,CAAmBd,IAAnB,EAAyB,EAAEX,WAAWtD,WAAWiE,KAAKvD,KAAL,CAAW4C,SAAtB,EAAiC,2BAAjC,CAAb,EAAzB,CAfF;AAgBN7B;AAhBM,MAAT;AAkBA;;AAED,OAAM8C,SAEL;AAAA;AAAA;AACC,UAAMuB,eAAelF,KAAf,CADP;AAEC,UAAM;AAAA,aAAO,OAAKD,OAAL,CAAamF,eAAelF,KAAf,CAAb,IAAsC6D,KAA7C;AAAA,MAFP;AAGC,gBAAYzE,WAEX,2BAFW,EAGX,iCAHW,EAIX;AACC,wCAAmCwB,WAAWA,QAAQuE,IAAR,KAAiBtF,OAAOuF,SADvE;AAEC,6CAAwC3D,QAFzC;AAGC;AACA,mDAA8CA;AAJ/C,MAJW,CAHb;AAcGqD;AAdH,IAFD;;AAoBA,UAAOnB,MAAP;AACA;;AAED;AACA;AACA;AACA;AACA;;;;yCAEA;AAAA,OACS5C,cADT,GAC4B,KAAKjB,KADjC,CACSiB,cADT;;;AAGC,OAAM0C,WAAW,KAAK4B,yBAAL,EAAjB;;AAEA,OAAI,CAACtE,cAAL,EACA;AACC,WAAO0C,QAAP;AACA;;AAED,OAAME,SAEL;AAAA;AAAA,MAAK,OAAQ2B,sCAAb;AACG,SAAKd,aAAL,EADH;AAEGf;AAFH,IAFD;;AAQA,UAAOE,MAAP;AACA;;;8CAGD;AAAA;;AAAA,iBAcG,KAAK7D,KAdR;AAAA,OAGEI,QAHF,WAGEA,QAHF;AAAA,OAIEF,KAJF,WAIEA,KAJF;AAAA,OAKEuC,WALF,WAKEA,WALF;AAAA,OAME1B,KANF,WAMEA,KANF;AAAA,OAOEwB,QAPF,WAOEA,QAPF;AAAA,OAQEpC,YARF,WAQEA,YARF;AAAA,OASEsF,OATF,WASEA,OATF;AAAA,OAUEC,QAVF,WAUEA,QAVF;AAAA,OAWEC,OAXF,WAWEA,OAXF;AAAA,OAYEC,cAZF,WAYEA,cAZF;AAAA,iBAsBG,KAAKnF,KAtBR;AAAA,OAkBEkB,QAlBF,WAkBEA,QAlBF;AAAA,OAmBEkE,kBAnBF,WAmBEA,kBAnBF;AAAA,OAoBEC,wBApBF,WAoBEA,wBApBF;;;AAwBC,OAAMnC,WAAW,KAAKC,mBAAL,EAAjB;AACA,OAAMmC,iBAAiB,KAAKC,yBAAL,EAAvB;;AAEA,OAAMC,gBAAgBtC,WAAWoC,cAAX,GAA6BtD,eAAe1B,KAAlE;;AAEA,OAAIZ,gBAAgBwB,QAApB,EACA;AACC;;AAEA,QAAMkC,UAEL;AACC,WAAK,MADN;AAEC,UAAM;AAAA,aAAO,OAAK1D,YAAL,GAAoB4D,KAA3B;AAAA,MAFP;AAGC,kBAAckC,aAHf;AAIC,YAAQH,wBAJT;AAKC,eAAW,KAAKI,4BALjB;AAMC,gBAAY,KAAKC,WANlB;AAOC,cAAUR,OAPX;AAQC,aAAS,KAAKS,OARf;AASC,eAAWV,QATZ;AAUC,gBAAYpG,WAEX,mBAFW,EAGX,wBAHW,EAIX,sCAJW,EAKX;AACC,yCAAqC,CAACyG,cADvC;AAEC;AACA,0CAAqCpE,QAHtC;AAIC,0CAAqCY;AAJtC,MALW,EAWXqD,cAXW,CAVb,GAFD;;AA2BA,WAAO/B,OAAP;AACA;;AAED,OAAMA,SAEL;AAAA;AAAA;AACC,UAAM;AAAA,aAAO,OAAKF,QAAL,GAAgBI,KAAvB;AAAA,MADP;AAEC,WAAK,QAFN;AAGC,eAAWxB,QAHZ;AAIC,cAAU,KAAKgC,MAJhB;AAKC,gBAAY,KAAK4B,WALlB;AAMC,cAAUR,OANX;AAOC,aAAS,KAAKS,OAPf;AAQC,eAAWV,QARZ;AASC,gBAAYpG,WAEX,mBAFW,EAGX,wBAHW,EAIX;AACC,oCAAoC,KAAK6E,uBAAL,EADrC;AAEC,yCAAoC,CAAC4B;AAFtC,MAJW,CATb;AAoBC;AAAA;AAAA,OAAK,WAAU,gCAAf;AAGC;AAAA;AAAA,QAAK,WAAU,8BAAf;AACIN,iBAAW9B,QAAX,IAAuBA,SAASJ,IAAjC,GAAyCrE,MAAMmF,YAAN,CAAmBV,SAASJ,IAA5B,EAAkC,EAAE8C,OAAON,cAAT,EAAlC,CAAzC,GAAwGE;AAD3G,MAHD;AAQC;AACC,iBAAY3G,WAAW,qBAAX,EACZ;AACC;AACA,wCAAiCqC;AAFlC,OADY,CADb;AARD;AApBD,IAFD;;AAwCA,UAAOkC,MAAP;AACA;;AAED;;;;kCAEA;AAAA;;AAAA,iBAeG,KAAK7D,KAfR;AAAA,OAGEiC,EAHF,WAGEA,EAHF;AAAA,OAIEqE,IAJF,WAIEA,IAJF;AAAA,OAKEpG,KALF,WAKEA,KALF;AAAA,OAMEa,KANF,WAMEA,KANF;AAAA,OAOEwB,QAPF,WAOEA,QAPF;AAAA,OAQEtC,OARF,WAQEA,OARF;AAAA,OASEI,IATF,WASEA,IATF;AAAA,OAUEC,OAVF,WAUEA,OAVF;AAAA,OAWEU,QAXF,WAWEA,QAXF;AAAA,OAYEC,cAZF,WAYEA,cAZF;AAAA,OAaEb,QAbF,WAaEA,QAbF;;;AAiBC,OAAIC,IAAJ,EACA;AACC,QAAMwD,WAEL;AAAA;AAAA;AACC,iBAAYvE,WACX;AACA,+BAAyB0B;AADzB,OADW,CADb;AAKEV;AALF,KAFD;;AAWA,WAAOuD,QAAP;AACA;;AAED,OAAMA,SAEL;AAAA;AAAA;AACC,UAAM;AAAA,aAAO,OAAKvB,MAAL,GAAcyB,KAArB;AAAA,MADP;AAEC,SAAK9B,EAFN;AAGC,WAAOqE,IAHR;AAIC,YAAQpC,eAAehE,KAAf,IAAwBT,wBAAxB,GAAmDS,KAJ5D;AAKC,eAAWqC,QALZ;AAMC,eAAW,KAAKgE,uBANjB;AAOC,gBAAYjH,WAAW,aAAX,EAA0B,sBAA1B,EACZ;AACC,uCAAkC2B,cADnC;AAEC,8BAAkCD;AAFnC,MADY,CAPb;AAaEf,cAEA,KAAKuG,4BAAL,CAAkCvG,OAAlC,EAA2CiE,eAAehE,KAAf,CAA3C,CAFA,GAIAhB,MAAM0B,QAAN,CAAeyC,GAAf,CAAmBjD,QAAnB,EAA6B,UAACqG,KAAD,EAC7B;AACC,SAAI,CAACA,KAAL,EACA;AACC;AACA;;AAED,SAAM5C,SAEL;AAAA;AAAA;AACC,kBAAU,6BADX;AAEC,YAAM4C,MAAMzG,KAAN,CAAYE,KAFnB;AAGC,cAAQuG,MAAMzG,KAAN,CAAYE,KAHrB;AAIGuG,YAAMzG,KAAN,CAAYe;AAJf,MAFD;;AAUA,YAAO8C,MAAP;AACA,KAlBD;AAjBF,IAFD;;AA0CA,UAAOA,MAAP;AACA;;;+CAE4B5D,O,EAASyG,wB,EACtC;AAAA,OACSjE,WADT,GACyB,KAAKzC,KAD9B,CACSyC,WADT;;;AAGC,OAAIkE,uBAAuB,KAA3B;;AAEA,OAAMC,mBAAmB3G,QAAQoD,GAAR,CAAY,UAACwD,MAAD,EACrC;AAAA,QACO3G,KADP,GACwB2G,MADxB,CACO3G,KADP;AAAA,QACca,KADd,GACwB8F,MADxB,CACc9F,KADd;;;AAGC,QAAImD,eAAehE,KAAf,CAAJ,EACA;AACCyG,4BAAuB,IAAvB;AACAzG,aAAQT,wBAAR;AACA;;AAED,QAAMoE,SAEL;AAAA;AAAA;AACC,iBAAU,6BADX;AAEC,WAAMuB,eAAelF,KAAf,CAFP;AAGC,aAAQA,KAHT;AAIGa;AAJH,KAFD;;AAUA,WAAO8C,MAAP;AACA,IArBwB,CAAzB;;AAuBA,OAAI6C,4BAA4B,CAACC,oBAAjC,EACA;AACCC,qBAAiBE,OAAjB,CAEC;AAAA;AAAA;AACC,iBAAU,6BADX;AAEC,WAAM1B,eAAetD,SAAf,CAFP;AAGC,aAAM,EAHP;AAIGW;AAJH,KAFD;AASA;;AAED,UAAOmE,gBAAP;AACA;;AAED;;;;4CAEA;AAAA,iBACoC,KAAK5G,KADzC;AAAA,OACS+G,eADT,WACSA,eADT;AAAA,OAC0BrE,KAD1B,WAC0BA,KAD1B;;;AAGC,UAAOqE,mBAAmBrE,KAA1B;AACA;;;wCA0BD;AAAA,OACSxC,KADT,GACmB,KAAKF,KADxB,CACSE,KADT;;;AAGC,UAAO,KAAK8G,UAAL,CAAgB9G,KAAhB,CAAP;AACA;;;6BAEUA,K,EACX;AAAA,iBAC+B,KAAKF,KADpC;AAAA,OACSC,OADT,WACSA,OADT;AAAA,OACkBG,QADlB,WACkBA,QADlB;;;AAGC,OAAIH,OAAJ,EACA;AACC,WAAOA,QAAQgH,MAAR,CAAe;AAAA,YAAKC,EAAEhH,KAAF,KAAYA,KAAjB;AAAA,KAAf,EAAuC,CAAvC,CAAP;AACA;;AAED,OAAI2G,eAAJ;;AAEA3H,SAAM0B,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiC,UAASqG,KAAT,EACjC;AACC,QAAIA,MAAMzG,KAAN,CAAYE,KAAZ,KAAsBA,KAA1B,EACA;AACC2G,cAASJ,KAAT;AACA;AACD,IAND;;AAQA,UAAOI,MAAP;AACA;;;mCAEgBA,M,EACjB;AAAA,iBAC+B,KAAK7G,KADpC;AAAA,OACSC,OADT,WACSA,OADT;AAAA,OACkBG,QADlB,WACkBA,QADlB;;;AAGC,OAAIH,OAAJ,EACA;AACC,WAAOA,QAAQkH,OAAR,CAAgBN,MAAhB,CAAP;AACA;;AAED,OAAIO,qBAAJ;;AAEAlI,SAAM0B,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiC,UAASqG,KAAT,EAAgBnD,KAAhB,EACjC;AACC,QAAImD,MAAMzG,KAAN,CAAYE,KAAZ,KAAsB2G,OAAO3G,KAAjC,EACA;AACCkH,oBAAe9D,KAAf;AACA;AACD,IAND;;AAQA,UAAO8D,YAAP;AACA;;;8CAGD;AAAA,OACSnH,OADT,GACqB,KAAKD,KAD1B,CACSC,OADT;;;AAGC,OAAM0D,WAAW,KAAKC,mBAAL,EAAjB;;AAEA,OAAI,CAACD,QAAL,EACA;AACC;AACA;;AAED,OAAI1D,OAAJ,EACA;AACC,WAAO0D,SAAS5C,KAAhB;AACA;;AAED,UAAO4C,SAAS3D,KAAT,CAAee,KAAtB;AACA;;;8BAGD;AAAA,kBAC+B,KAAKf,KADpC;AAAA,OACSC,OADT,YACSA,OADT;AAAA,OACkBoH,QADlB,YACkBA,QADlB;;;AAGC,UAAOpH,QAAQuE,MAAR,GAAiB6C,QAAxB;AACA;;;2CAGD;AAAA,OADuB5G,KACvB,yDAD+B,KAAKA,KACpC;AAAA,OACS4G,QADT,GACsB,KAAKrH,KAD3B,CACSqH,QADT;;AAGC;;AACA,UAAO,CAAC5G,MAAMmB,MAAN,GAAe,IAAInB,MAAM6G,gBAA1B,KAA+CD,WAAW,KAAKvE,WAAL,GAAmB0B,MAA7E,IAAuF/D,MAAM6G,gBAApG;AACA;;;mCAGD;AACC,UAAO,IAAP;;AAEA;AACA;;;0BAGD;AACC,OAAI,KAAKnH,YAAT,EACA;AACC,SAAKA,YAAL,CAAkBoH,KAAlB;AACA,IAHD,MAKA;AACC,SAAK5D,QAAL,CAAc4D,KAAd;AACA;AACD;;;+BAkIYrH,K,EAAOgF,K,EACpB;AACC,OAAIA,KAAJ,EACA;AACCA,UAAMsC,cAAN;AACA;;AAJF,OAMSjH,QANT,GAMsB,KAAKP,KAN3B,CAMSO,QANT;;;AAQC,QAAKgE,MAAL,CAAYzC,SAAZ,EAAuB,EAAE2F,UAAU;AAAA,YAAMlH,SAASL,KAAT,CAAN;AAAA,KAAZ,EAAvB;AACA;;AA4BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA4JA;;;;gCA8BA;AAAA,kBACkE,KAAKF,KADvE;AAAA,OACSG,YADT,YACSA,YADT;AAAA,OACuBuH,mBADvB,YACuBA,mBADvB;AAAA,OAC4CL,QAD5C,YAC4CA,QAD5C;AAAA,OACsDpH,OADtD,YACsDA,OADtD;AAAA,OAESS,gBAFT,GAE8B,KAAKD,KAFnC,CAESC,gBAFT;;;AAIC,OAAI,CAACP,YAAL,EACA;AACC,WAAOF,OAAP;AACA;;AAED,OAAIyH,mBAAJ,EACA;AACC,WAAOhH,gBAAP;AACA;;AAED,UAAOA,iBAAiBiH,KAAjB,CAAuB,CAAvB,EAA0BN,QAA1B,CAAP;AACA;;AAED;;;;8CAEA;AACC,OAAMpH,UAAU,KAAK6C,WAAL,EAAhB;AADD,OAES8B,oBAFT,GAEkC,KAAKnE,KAFvC,CAESmE,oBAFT;;;AAIC,OAAIgD,IAAI,CAAR;AACA,UAAOA,IAAI3H,QAAQuE,MAAnB,EACA;AACC,QAAIvE,QAAQ2H,CAAR,EAAW1H,KAAX,KAAqB0E,oBAAzB,EACA;AACC,SAAIgD,IAAI,CAAJ,IAAS,CAAb,EACA;AACC,aAAO3H,QAAQ2H,IAAI,CAAZ,CAAP;AACA;AACD;AACDA;AACA;AACD;;AAED;;;;0CAEA;AACC,OAAM3H,UAAU,KAAK6C,WAAL,EAAhB;AADD,OAES8B,oBAFT,GAEkC,KAAKnE,KAFvC,CAESmE,oBAFT;;;AAIC,OAAIgD,IAAI,CAAR;AACA,UAAOA,IAAI3H,QAAQuE,MAAnB,EACA;AACC,QAAIvE,QAAQ2H,CAAR,EAAW1H,KAAX,KAAqB0E,oBAAzB,EACA;AACC,SAAIgD,IAAI,CAAJ,GAAQ3H,QAAQuE,MAApB,EACA;AACC,aAAOvE,QAAQ2H,IAAI,CAAZ,CAAP;AACA;AACD;AACDA;AACA;AACD;;AAED;;;;4BACU1H,K,EACV;AAAA,OACSoH,gBADT,GAC8B,KAAK7G,KADnC,CACS6G,gBADT;;;AAGC,OAAMO,iBAAiBxI,SAASyI,WAAT,CAAqB,KAAK7H,OAAL,CAAamF,eAAelF,KAAf,CAAb,CAArB,CAAvB;AACA,OAAMuE,OAAOpF,SAASyI,WAAT,CAAqB,KAAKrD,IAA1B,CAAb;;AAEA;AACA;AACA;AACA,OAAI,CAACoD,cAAL,EACA;AACC;AACA;;AAED,OAAIE,aAAaF,eAAeG,SAAhC;;AAEA,OAAMC,kBAAkBxD,KAAKyD,UAAL,KAAoBL,cAA5C;;AAEA;AACA,OAAII,eAAJ,EACA;AACCF,kBAAcT,gBAAd;AACA;;AAED7C,QAAK0D,SAAL,GAAiBJ,UAAjB;AACA;;AAED;;;;8BACY7H,K,EAAOkI,O,EACnB;AAAA,OACSd,gBADT,GAC8B,KAAK7G,KADnC,CACS6G,gBADT;;;AAGC,OAAMO,iBAAiBxI,SAASyI,WAAT,CAAqB,KAAK7H,OAAL,CAAamF,eAAelF,KAAf,CAAb,CAArB,CAAvB;AACA,OAAMuE,OAAOpF,SAASyI,WAAT,CAAqB,KAAKrD,IAA1B,CAAb;;AAEA,OAAMwD,kBAAkBxD,KAAKyD,UAAL,KAAoBL,cAA5C;AACA,OAAMQ,iBAAkB5D,KAAK6D,SAAL,KAAmBT,cAA3C;;AAEA,WAAQO,OAAR;AAEC,SAAK,KAAL;AACC,SAAIG,WAAWV,eAAeG,SAA9B;;AAEA,SAAIC,eAAJ,EACA;AACCM,kBAAYjB,gBAAZ;AACA;;AAED,SAAIiB,WAAW9D,KAAK0D,SAApB,EACA;AACC1D,WAAK0D,SAAL,GAAiBI,QAAjB;AACA;;AAED;;AAED,SAAK,QAAL;AACC,SAAIC,cAAcX,eAAeG,SAAf,GAA2BH,eAAeY,YAA5D;;AAEA,SAAIJ,cAAJ,EACA;AACCG,qBAAelB,gBAAf;AACA;;AAED,SAAIkB,cAAc/D,KAAK0D,SAAL,GAAiB1D,KAAKgE,YAAxC,EACA;AACChE,WAAK0D,SAAL,GAAiBK,cAAc/D,KAAKgE,YAApC;AACA;;AAED;AA9BF;AAgCA;;AAED;;;;qCAEA;AAAA,OACSxI,OADT,GACqB,KAAKD,KAD1B,CACSC,OADT;;;AAGC,OAAMyI,gBAAgBrJ,SAASyI,WAAT,CAAqB,KAAKrD,IAA1B,CAAtB;AACA,OAAMkE,SAASC,SAASpH,OAAOqH,gBAAP,CAAwBH,aAAxB,EAAuCI,cAAhD,CAAf;AACA,OAAMlH,SAAS8G,cAAcK,YAA7B;;AAEA,OAAMzB,mBAAmBsB,SAASpH,OAAOqH,gBAAP,CAAwBH,aAAxB,EAAuCM,UAAhD,CAAzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAMvI,QAAQ,EAAEmB,cAAF,EAAU0F,kCAAV,EAA4BqB,cAA5B,EAAd;;AAEA,OAAI,KAAK3F,aAAL,MAAwB/C,OAAxB,IAAmC,KAAKkD,SAAL,EAAvC,EACA;AACC1C,UAAMoC,WAAN,GAAoB,KAAKoG,sBAAL,CAA4BxI,KAA5B,CAApB;AACA;;AAED,QAAKY,QAAL,CAAcZ,KAAd;AACA;;;kCAGD;AAAA,kBAC6D,KAAKT,KADlE;AAAA,OACSK,IADT,YACSA,IADT;AAAA,OACeF,YADf,YACeA,YADf;AAAA,OAC6BuH,mBAD7B,YAC6BA,mBAD7B;AAAA,OACkDvF,MADlD,YACkDA,MADlD;;;AAGC,UAAO,CAAC9B,IAAD,KAAUF,gBAAgBuH,mBAAhB,IAAuC,CAACvH,YAAlD,KAAmEgC,MAA1E;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uCAvDqBlC,O,EAASC,K,EAC9B;AACC;AACA,OAAI,CAACA,KAAL,EACA;AACC,WAAOD,OAAP;AACA;;AAEDC,WAAQA,MAAMgJ,WAAN,EAAR;;AAEA,UAAOjJ,QAAQgH,MAAR,CAAe,kBACtB;AAAA,QADyBlG,KACzB,UADyBA,KACzB;AAAA,QADgCoI,OAChC,UADgCA,OAChC;;AACC,WAAO,CAACA,WAAWpI,KAAZ,EAAmBmI,WAAnB,GAAiC/B,OAAjC,CAAyCjH,KAAzC,KAAmD,CAA1D;AACA,IAHM,CAAP;AAIA;;;;EAl+CkCf,a;;AAAfY,M,CAEbqJ,S,GACP;AACC;AACAnJ,UAAab,UAAUiK,OAAV,CAEZjK,UAAUkK,KAAV,CACC;AACA;AACApJ,SAAQR,eAFR;AAGA;AACAqB,SAAQ3B,UAAUQ,MAJlB;AAKA;AACA2D,QAAQnE,UAAUmK;AANlB,EADD,CAFY,CAFd;;AAeC;AACAjD,OAAalH,UAAUQ,MAhBxB;;AAkBC;AACAmB,QAAa3B,UAAUQ,MAnBxB;;AAqBC;AACA6C,cAAcrD,UAAUQ,MAtBzB;;AAwBC;AACA0C,SAAclD,UAAUU,IAAV,CAAe0J,UAzB9B;;AA2BC;AACAvI,iBAAiB7B,UAAUU,IAAV,CAAe0J,UA5BjC;;AA8BC;AACA;AACAnH,cAAcjD,UAAUU,IAhCzB;;AAkCC;AACAyC,WAAanD,UAAUU,IAnCxB;;AAqCC;AACA0C,WAAapD,UAAUU,IAAV,CAAe0J,UAtC7B;;AAwCC;AACAtJ,QAAaR,eAzCd;;AA2CC;AACAa,WAAanB,UAAUqK,IA5CxB;;AA8CC;AACA9D,UAAavG,UAAUqK,IA/CxB;;AAiDC;AACA;AACA;AACA;AACAC,SAAatK,UAAUqK,IArDxB;;AAuDC;AACA;AACA;AACAzI,WAAa5B,UAAUU,IAAV,CAAe0J,UA1D7B;;AA4DC;AACA5G,YAAaxD,UAAUQ,MA7DxB;;AA+DC;AACAgG,iBAAiBxG,UAAUQ,MAhE5B;;AAkEC;AACA+C,QAAavD,UAAUuK,MAnExB;;AAqEC;AACA;AACA;AACA;AACAlE,UAAarG,UAAUU,IAzExB;;AA2EC;AACA4F,WAAatG,UAAUS,MA5ExB;;AA8EC;AACA;AACAM,eAAef,UAAUU,IAhF1B;;AAkFC;AACA;AACA4H,sBAAsBtI,UAAUU,IApFjC;;AAsFC;AACAsC,YAAahD,UAAUwK,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAvFd;;AAyFC;AACA;AACA;AACAvJ,OAAajB,UAAUU,IA5FxB;;AA8FC;AACA;AACAQ,UAAalB,UAAU0B,OAhGxB;;AAkGC;AACA;AACA;AACAqB,SAAa/C,UAAUU,IAAV,CAAe0J,UArG7B;;AAuGC;AACA;AACA;AACAtH,SAAa9C,UAAUU,IA1GxB;;AA4GC;AACA;AACA;AACAuH,WAAajI,UAAUS,MAAV,CAAiB2J,UA/G/B;;AAiHC;AACA7E,mBAAmBvF,UAAUU,IAlH9B;;AAoHC+J,qBAAqBzK,UAAUU,IAAV,CAAe0J,UApHrC;;AAsHCM,WAAW1K,UAAUqK,IAtHtB;;AAwHCM,WAAW3K,UAAUqK;;AAErB;AACA;AACA;AA5HD,C;AAHoB1J,M,CAkIbiK,Y,GACP;AACC5H,YAAqB,MADtB;AAECD,SAAqB,IAFtB;AAGCkF,WAAqB,CAHtB;AAIC1C,mBAAqB,IAJtB;AAKCkF,qBAAqB,IALtB;AAMC7I,WAAqB,KANtB;AAOCsB,SAAqB,KAPtB;AAQCrB,iBAAqB,KARtB;;AAUC;AACAuB,WAAW;;AAXZ,C;;;;;MAkBA/B,K,GACA;AACC;AACA6G,oBAAkB;AAFnB,E;;MAgqBAf,uB,GAA0B,UAACrB,KAAD,EAC1B;AAAA,MACS3E,QADT,GACsB,OAAKP,KAD3B,CACSO,QADT;;;AAGC,MAAIL,QAAQgF,MAAM+E,MAAN,CAAa/J,KAAzB;;AAEA;AACA,MAAIA,UAAUT,wBAAd,EACA;AACC;AACAS,WAAQ4B,SAAR;AACA;;AAEDvB,WAASL,KAAT;AACA,E;;MAEDqB,6B,GAAgC,YAChC;AACC;AACA;AACAlC,WAASyI,WAAT,CAAqB,OAAKxF,MAA1B,EAAkCK,KAAlC,CAAwCuH,KAAxC,GAAiD7K,SAASyI,WAAT,CAAqB,OAAKnE,QAA1B,EAAoCwG,WAApC,GAAkD,CAAnD,GAAwD,IAAxG;AACA,E;;MA0GD5F,M,GAAS,UAACW,KAAD,EACT;AAAA,MADiBkF,cACjB,yDADkC,EAClC;;AACC,MAAIlF,KAAJ,EACA;AACC;AACAA,SAAMsC,cAAN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAXF,iBAwBG,OAAKxH,KAxBR;AAAA,MAeEK,IAfF,YAeEA,IAfF;AAAA,MAgBEkC,QAhBF,YAgBEA,QAhBF;AAAA,MAiBEpC,YAjBF,YAiBEA,YAjBF;AAAA,MAkBEF,OAlBF,YAkBEA,OAlBF;AAAA,MAmBEC,KAnBF,YAmBEA,KAnBF;AAAA,MAoBE2J,kBApBF,YAoBEA,kBApBF;AAAA,MAqBEE,QArBF,YAqBEA,QArBF;AAAA,MAsBE9I,cAtBF,YAsBEA,cAtBF;;;AA0BC,MAAIA,cAAJ,EACA;AACC;AACA;;AAED,MAAIsB,QAAJ,EACA;AACC;AACA;;AAlCF,MAoCSZ,QApCT,GAoCsB,OAAKlB,KApC3B,CAoCSkB,QApCT;;;AAsCC,MAAI,CAACA,QAAD,IAAaxB,YAAjB,EACA;AACC,UAAKkB,QAAL,CACC;AACA;AACA;AACA;AACAyE,8BAA2B,EAJ3B;AAKApF,sBAA2BT;AAL3B,IADD;;AASA;AACA;AACA;AACA;AACA;;AAED;AACA;AACA;AACA;AACAoK,aAAW,YACX;AACC,UAAKhJ,QAAL,CACC;AACAM,cAAU,CAACA;AADX,IADD;;AAKA,OAAI,CAACA,QAAD,IAAa1B,OAAjB,EACA;AACC;AACA;;AAEA,QAAM2E,uBAAuB1E,SAASD,QAAQ,CAAR,EAAWC,KAAjD;;AAEA,WAAKmB,QAAL,CAAc,EAAEuD,0CAAF,EAAd;;AAEA;AACA,WAAK0F,SAAL,CAAe1F,oBAAf;AACA;;AAED;AACA;AACA,OAAI,CAACwF,eAAeG,uBAApB,EACA;AACC,QAAIpK,YAAJ,EACA;AACC,SAAI,CAACwB,QAAD,IAAcA,YAAYkI,kBAA9B,EACA;AACCQ,iBAAW,YACX;AACC;AACA,WAAI1I,QAAJ,EACA;AACC,eAAKgC,QAAL,CAAc4D,KAAd;AACA,QAHD,MAKA;AACC,eAAKpH,YAAL,CAAkBoH,KAAlB;AACA;AACD,OAXD,EAYA,CAZA;AAaA;AACD,KAlBD,MAoBA;AACC;AACA;AACA;AACA,SAAI,CAAClH,IAAL,EACA;AACC,aAAKsD,QAAL,CAAc4D,KAAd;AACA;AACD;AACD;;AAED,OAAIwC,QAAJ,EACA;AACCA,aAAS,CAACpI,QAAV;AACA;;AAED,OAAIyI,eAAe3C,QAAnB,EACA;AACC2C,mBAAe3C,QAAf;AACA;AACD,GAhED,EAiEA,CAjEA;AAkEA,E;;MAcDrG,gB,GAAmB,UAAC8D,KAAD,EACnB;AACC,MAAM/E,eAAed,SAASyI,WAAT,CAAqB,OAAK3H,YAA1B,CAArB;AACA,MAAMqK,kBAAkBnL,SAASyI,WAAT,CAAqB,OAAKnE,QAA1B,CAAxB;AACA,MAAM8G,eAAepL,SAASyI,WAAT,CAAqB,OAAKrD,IAA1B,CAArB;;AAEA;AACA;AACA;AACA,MAAIgG,gBAAgBA,aAAaC,QAAb,CAAsBxF,MAAM+E,MAA5B,CAAhB,IACC9J,gBAAgBA,aAAauK,QAAb,CAAsBxF,MAAM+E,MAA5B,CADjB,IAECO,mBAAmBA,gBAAgBE,QAAhB,CAAyBxF,MAAM+E,MAA/B,CAFxB,EAGA;AACC;AACA;;AAED,SAAK5I,QAAL,CAAc,EAAEM,UAAU,KAAZ,EAAd;;AAfD,MAiBSoI,QAjBT,GAiBsB,OAAK/J,KAjB3B,CAiBS+J,QAjBT;;;AAmBC,MAAIA,QAAJ,EACA;AACCA,YAAS,KAAT;AACA;AACD,E;;MAWD/F,wB,GAA2B,UAACkB,KAAD,EAC3B;AACC,MAAIA,MAAMyF,OAAN,IAAiBzF,MAAM0F,MAAvB,IAAiC1F,MAAM2F,QAAvC,IAAmD3F,MAAM4F,OAA7D,EACA;AACC;AACA;;AAJF,MAMSnJ,QANT,GAMsB,OAAKlB,KAN3B,CAMSkB,QANT;;;AAQC,UAAQuD,MAAM6F,OAAd;AAEC;AACA,QAAK,CAAL;AACC,QAAIpJ,QAAJ,EACA;AACC,YAAK4C,MAAL,CAAYzC,SAAZ,EAAuB,EAAEyI,yBAAyB,IAA3B,EAAvB;;AADD,SAGST,QAHT,GAGsB,OAAK9J,KAH3B,CAGS8J,QAHT;;;AAKC,SAAIA,QAAJ,EACA;AACCA,eAAS5E,KAAT;AACA;AACD;AACD;AAfF;AAiBA,E;;MAEDiB,W,GAAc,UAACjB,KAAD,EACd;AACC,MAAIA,MAAMyF,OAAN,IAAiBzF,MAAM0F,MAAvB,IAAiC1F,MAAM2F,QAAvC,IAAmD3F,MAAM4F,OAA7D,EACA;AACC;AACA;;AAJF,iBAM0C,OAAK9K,KAN/C;AAAA,MAMSC,OANT,YAMSA,OANT;AAAA,MAMkBC,KANlB,YAMkBA,KANlB;AAAA,MAMyBC,YANzB,YAMyBA,YANzB;AAAA,gBAO4C,OAAKM,KAPjD;AAAA,MAOSkB,QAPT,WAOSA,QAPT;AAAA,MAOmBiD,oBAPnB,WAOmBA,oBAPnB;;AASC;;AACA,MAAI3E,OAAJ,EACA;AACC,WAAQiF,MAAM6F,OAAd;AAEC;AACA,SAAK,EAAL;AACC7F,WAAMsC,cAAN;;AAEA,SAAMwD,WAAW,OAAKC,yBAAL,EAAjB;;AAEA,SAAID,QAAJ,EACA;AACC,aAAKE,WAAL,CAAiBF,SAAS9K,KAA1B,EAAiC,KAAjC;AACA,aAAO,OAAKmB,QAAL,CAAc,EAAEuD,sBAAsBoG,SAAS9K,KAAjC,EAAd,CAAP;AACA;;AAED;;AAED;AACA,SAAK,EAAL;AACCgF,WAAMsC,cAAN;;AAEA,SAAM2D,OAAO,OAAKC,qBAAL,EAAb;;AAEA,SAAID,IAAJ,EACA;AACC,aAAKD,WAAL,CAAiBC,KAAKjL,KAAtB,EAA6B,QAA7B;AACA,aAAO,OAAKmB,QAAL,CAAc,EAAEuD,sBAAsBuG,KAAKjL,KAA7B,EAAd,CAAP;AACA;;AAED;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAAK,EAAL;AACC;AACA,SAAI,OAAKO,KAAL,CAAWkB,QAAf,EACA;AACC,aAAK4C,MAAL;;AAEA;AACA8F,iBACC,YACD;AACC,cAAK1G,QAAL,CAAc4D,KAAd;AACA,OAJD,EAKA,CALA;AAMA;;AAED;;AAED;AACA,SAAK,EAAL;AACC;AACA,SAAI5F,QAAJ,EACA;AACCuD,YAAMsC,cAAN;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAI,OAAK1E,WAAL,MAAsB,OAAKA,WAAL,GAAmB0B,MAAnB,GAA4B,CAAtD,EACA;AACC;AACA,cAAKW,YAAL,CAAkBP,oBAAlB;AACA;AACA,cAAKL,MAAL;AACA;AACD;AACD;AACA;AACA;AACA;AApBA,UAsBA;AACC,WAAIhF,mBAAmBF,SAASyI,WAAT,CAAqB,OAAKhE,MAA1B,CAAnB,CAAJ,EACA;AACCoB,cAAMsC,cAAN;AACA;AACD;;AAED;;AAED;AACA,SAAK,EAAL;AACC;AACA,SAAI7F,QAAJ,EACA;AACC;AACA;AACA,UAAI,OAAKmB,WAAL,MAAsB,CAAC3C,YAA3B,EACA;AACC+E,aAAMsC,cAAN;;AAEA;AACA;AACA;AACA;AACA,cAAKrC,YAAL,CAAkBP,oBAAlB;AACA,cAAKL,MAAL;AACA;AACD;AACD;AACA;;AAEA;AA7GF;AA+GA;AACD,E;;MAGD6B,O,GAAU,UAAClB,KAAD,EACV;AAAA,iBAC2B,OAAKlF,KADhC;AAAA,MACS0J,MADT,YACSA,MADT;AAAA,MACiBxJ,KADjB,YACiBA,KADjB;;AAGC;AACA;AACA;;AACA,MAAIwJ,MAAJ,EACA;AACC,OAAM2B,sBAEFnG,KAFE;AAGL+E,yBAEI/E,MAAM+E,MAFV;AAGC/J;AAHD;AAHK,KAAN;;AAUA;AACA;AACAmL,UAAOC,eAAP,GAAyBpG,MAAMoG,eAA/B;AACAD,UAAO7D,cAAP,GAAyBtC,MAAMsC,cAA/B;;AAEAkC,UAAO2B,MAAP;AACA;AACD,E;;MA0MDnF,4B,GAA+B,UAAChB,KAAD,EAC/B;AAAA,MACSjF,OADT,GACqB,OAAKD,KAD1B,CACSC,OADT;;AAEC,MAAMsL,QAAQrG,MAAM+E,MAAN,CAAa/J,KAA3B;AACA,MAAMQ,mBAAmB,OAAKC,oBAAL,CAA0BV,OAA1B,EAAmCsL,KAAnC,CAAzB;;AAEA,SAAKlK,QAAL,CACC;AACAyE,6BAA0ByF,KAD1B;AAEA7K,qCAFA;AAGAkE,yBAAsBlE,iBAAiB8D,MAAjB,GAA0B,CAA1B,GAA8B9D,iBAAiB,CAAjB,EAAoBR,KAAlD,GAA0D4B;AAHhF,GADD;AAMA,E;;;eAh/CmB/B,M;;;AA8gDrBA,OAAOuF,SAAP,GAAmB,UAAStF,KAAT,EACnB;AACC,QAAO,6BAAK,WAAU,yBAAf,GAAP;AACA,CAHD;;AAKA,IAAMwF,yCACN;AACCgG,UAAU;AADX,CADA;;AAKA;AACA;AACA,SAASpG,cAAT,CAAwBlF,KAAxB,EACA;AACC,QAAOgE,eAAehE,KAAf,IAAwB,yBAAxB,GAAoDA,KAA3D;AACA;;AAED,SAASgE,cAAT,CAAwBhE,KAAxB,EACA;AACC,QAAOA,UAAU,IAAV,IAAkBA,UAAU4B,SAAnC;AACA","file":"select.js","sourcesContent":["// https://github.com/halt-hammerzeit/react-responsive-ui/blob/master/source/select.js\n\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport classNames from 'classnames'\n\nimport { submit_parent_form, get_scrollbar_width } from './misc/dom'\n\n// Possible enhancements:\n//\n//  * If the menu is close to a screen edge,\n//    automatically reposition it so that it fits on the screen\n//  * Maybe show menu immediately above the toggler\n//    (like in Material design), not below it.\n//\n// https://material.google.com/components/menus.html\n\nconst Empty_value_option_value = ''\n\nconst value_prop_type = PropTypes.oneOfType\n([\n\tPropTypes.string,\n\tPropTypes.number,\n\tPropTypes.bool\n])\n\nexport default class Select extends PureComponent\n{\n\tstatic propTypes =\n\t{\n\t\t// A list of selectable options\n\t\toptions    : PropTypes.arrayOf\n\t\t(\n\t\t\tPropTypes.shape\n\t\t\t({\n\t\t\t\t// Option value (may be `undefined`)\n\t\t\t\tvalue : value_prop_type,\n\t\t\t\t// Option label (may be `undefined`)\n\t\t\t\tlabel : PropTypes.string,\n\t\t\t\t// Option icon\n\t\t\t\ticon  : PropTypes.node\n\t\t\t})\n\t\t),\n\n\t\t// HTML form input `name` attribute\n\t\tname       : PropTypes.string,\n\n\t\t// Label which is placed above the select\n\t\tlabel      : PropTypes.string,\n\n\t\t// Placeholder (like \"Choose\")\n\t\tplaceholder : PropTypes.string,\n\n\t\t// Whether to use native `<select/>`\n\t\tnative      : PropTypes.bool.isRequired,\n\n\t\t// Whether to use native `<select/>` when expanded\n\t\tnativeExpanded : PropTypes.bool.isRequired,\n\n\t\t// Show icon only for selected item,\n\t\t// and only if `concise` is `true`.\n\t\tsaveOnIcons : PropTypes.bool,\n\n\t\t// Disables this control\n\t\tdisabled   : PropTypes.bool,\n\n\t\t// Set to `true` to mark the field as required\n\t\trequired   : PropTypes.bool.isRequired,\n\n\t\t// Selected option value\n\t\tvalue      : value_prop_type,\n\n\t\t// Is called when an option is selected\n\t\tonChange   : PropTypes.func,\n\n\t\t// Is called when the select is focused\n\t\tonFocus    : PropTypes.func,\n\n\t\t// Is called when the select is blurred.\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\n\t\t// so that it gets the parsed `value` in its `onBlur` handler,\n\t\t// not the formatted text.\n\t\tonBlur     : PropTypes.func,\n\n\t\t// (exotic use case)\n\t\t// Falls back to a plain HTML input\n\t\t// when javascript is disabled (e.g. Tor)\n\t\tfallback   : PropTypes.bool.isRequired,\n\n\t\t// Component CSS class\n\t\tclassName  : PropTypes.string,\n\n\t\t// Autocomplete `<input/>` CSS class\n\t\tinputClassName : PropTypes.string,\n\n\t\t// CSS style object\n\t\tstyle      : PropTypes.object,\n\n\t\t// If this flag is set to `true`,\n\t\t// and `icon` is specified for a selected option,\n\t\t// then the selected option will be displayed\n\t\t// as icon only, without the label.\n\t\tconcise    : PropTypes.bool,\n\n\t\t// HTML `tabindex` attribute\n\t\ttabIndex   : PropTypes.number,\n\n\t\t// If set to `true`, autocompletion is available\n\t\t// upon expanding the options list.\n\t\tautocomplete : PropTypes.bool,\n\n\t\t// If set to `true`, autocomple will show all\n\t\t// matching options instead of just `maxItems`.\n\t\tautocompleteShowAll : PropTypes.bool,\n\n\t\t// Options list alignment (\"left\", \"right\")\n\t\talignment  : PropTypes.oneOf(['left', 'right']),\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then it's gonna be a dropdown menu\n\t\t// with `children` elements inside.\n\t\tmenu       : PropTypes.bool,\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then `toggler` is the dropdown menu button.\n\t\ttoggler    : PropTypes.element,\n\n\t\t// If `scroll` is `false`, then options list\n\t\t// is not limited in height.\n\t\t// Is `true` by default (scrollable).\n\t\tscroll     : PropTypes.bool.isRequired,\n\n\t\t// If this flag is set to `true`,\n\t\t// then the dropdown expands itself upward.\n\t\t// (as opposed to the default downward)\n\t\tupward     : PropTypes.bool,\n\n\t\t// Maximum items fitting the options list height (scrollable).\n\t\t// In case of `autocomplete` that's the maximum number of matched items shown.\n\t\t// Is `6` by default.\n\t\tmaxItems   : PropTypes.number.isRequired,\n\n\t\t// Is `true` by default (only when the list of options is scrollable)\n\t\tscrollbarPadding : PropTypes.bool,\n\n\t\tfocusUponSelection : PropTypes.bool.isRequired,\n\n\t\tonTabOut : PropTypes.func,\n\n\t\tonToggle : PropTypes.func\n\n\t\t// transition_item_count_min : PropTypes.number,\n\t\t// transition_duration_min : PropTypes.number,\n\t\t// transition_duration_max : PropTypes.number\n\t}\n\n\tstatic defaultProps =\n\t{\n\t\talignment          : 'left',\n\t\tscroll             : true,\n\t\tmaxItems           : 6,\n\t\tscrollbarPadding   : true,\n\t\tfocusUponSelection : true,\n\t\tfallback           : false,\n\t\tnative             : false,\n\t\tnativeExpanded     : false,\n\n\t\t// Set to `true` to mark the field as required\n\t\trequired : false,\n\n\t\t// transition_item_count_min : 1,\n\t\t// transition_duration_min : 60, // milliseconds\n\t\t// transition_duration_max : 100 // milliseconds\n\t}\n\n\tstate =\n\t{\n\t\t// Is initialized during the first `componentDidUpdate()` call\n\t\tvertical_padding: 0\n\t}\n\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\n\t\t// Shouldn't memory leak because\n\t\t// the set of options is assumed to be constant.\n\t\tthis.options = {}\n\n\t\tconst\n\t\t{\n\t\t\tvalue,\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tonChange\n\t\t}\n\t\t= props\n\n\t\tif (autocomplete)\n\t\t{\n\t\t\tif (!options)\n\t\t\t{\n\t\t\t\tthrow new Error(`\"options\" property is required for an \"autocomplete\" select`)\n\t\t\t}\n\n\t\t\tthis.state.matching_options = this.get_matching_options(options, value)\n\t\t}\n\n\t\tif (children && !menu)\n\t\t{\n\t\t\tReact.Children.forEach(children, (element) =>\n\t\t\t{\n\t\t\t\tif (!element.props.value)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"value\" prop on each child of <Select/>`)\n\t\t\t\t}\n\n\t\t\t\tif (!element.props.label)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"label\" prop on each child of <Select/>`)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (menu && !toggler)\n\t\t{\n\t\t\tthrow new Error(`Supply a \"toggler\" component when enabling \"menu\" in <Select/>`)\n\t\t}\n\n\t\tif (!menu && !onChange)\n\t\t{\n\t\t\tthrow new Error(`\"onChange\" property must be specified for <Select/>`)\n\t\t}\n\t}\n\n\t// Client side rendering, javascript is enabled\n\tcomponentDidMount()\n\t{\n\t\tconst { fallback, nativeExpanded } = this.props\n\n\t\tdocument.addEventListener('click', this.document_clicked)\n\n\t\tif (fallback)\n\t\t{\n\t\t\tthis.setState({ javascript: true })\n\t\t}\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\tthis.resize_native_expanded_select()\n\t\t\twindow.addEventListener('resize', this.resize_native_expanded_select)\n\t\t}\n\t}\n\n\tcomponentDidUpdate(previous_props, previous_state)\n\t{\n\t\tconst { nativeExpanded, value } = this.props\n\t\tconst { expanded, height } = this.state\n\n\t\tif (expanded !== previous_state.expanded)\n\t\t{\n\t\t\tif (expanded && this.should_animate())\n\t\t\t{\n\t\t\t\tif (height === undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.calculate_height()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the `value` changed then resize the native expanded `<select/>`\n\t\tif (nativeExpanded && value !== previous_props.value)\n\t\t{\n\t\t\tthis.resize_native_expanded_select()\n\t\t}\n\t}\n\n\tcomponentWillUnmount()\n\t{\n\t\tconst { nativeExpanded } = this.props\n\n\t\tdocument.removeEventListener('click', this.document_clicked)\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\twindow.removeEventListener('resize', this.resize_native_expanded_select)\n\t\t}\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tid,\n\t\t\tupward,\n\t\t\tscroll,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\talignment,\n\t\t\tautocomplete,\n\t\t\tsaveOnIcons,\n\t\t\tfallback,\n\t\t\tnative,\n\t\t\tnativeExpanded,\n\t\t\tdisabled,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\terror,\n\t\t\tstyle,\n\t\t\tclassName\n\t\t}\n\t\t= this.props\n\n\t\tconst\n\t\t{\n\t\t\texpanded,\n\t\t\tlist_height\n\t\t}\n\t\t= this.state\n\n\t\tconst options = this.get_options()\n\n\t\tlet list_style\n\n\t\t// Makes the options list scrollable (only when not in `autocomplete` mode).\n\t\tif (this.is_scrollable() && this.state.list_height !== undefined)\n\t\t{\n\t\t\tlist_style = { maxHeight: `${list_height}px` }\n\t\t}\n\n\t\tconst overflow = scroll && options && this.overflown()\n\n\t\tlet list_items\n\n\t\t// If a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those elements to <buttons/>\n\t\tif (options)\n\t\t{\n\t\t\tlist_items = options.map(({ value, label, icon }, index) =>\n\t\t\t{\n\t\t\t\treturn this.render_list_item({ index, value, label, icon: !saveOnIcons && icon, overflow })\n\t\t\t})\n\t\t}\n\t\t// Else, if a list of options is supplied as a set of child React elements,\n\t\t// then render those elements.\n\t\telse\n\t\t{\n\t\t\tlist_items = React.Children.map(children, (element, index) =>\n\t\t\t{\n\t\t\t\tif (!element)\n\t\t\t\t{\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\treturn this.render_list_item({ index, element })\n\t\t\t})\n\t\t}\n\n\t\tconst wrapper_style = { textAlign: alignment }\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div\n\t\t\t\tref={ ref => this.select = ref }\n\t\t\t\tonKeyDown={ this.on_key_down_in_container }\n\t\t\t\tstyle={ style ? { ...wrapper_style, ...style } : wrapper_style }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__rich'              : fallback,\n\t\t\t\t\t\t'rrui__select--menu'      : menu,\n\t\t\t\t\t\t'rrui__select--upward'    : upward,\n\t\t\t\t\t\t'rrui__select--expanded'  : expanded,\n\t\t\t\t\t\t'rrui__select--collapsed' : !expanded,\n\t\t\t\t\t\t'rrui__select--disabled'  : disabled\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t) }>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t({\n\t\t\t\t\t\t'rrui__input': !menu\n\t\t\t\t\t}) }>\n\n\t\t\t\t\t{/* Currently selected item */}\n\t\t\t\t\t{ !menu && !native && this.render_selected_item() }\n\n\t\t\t\t\t{/* Label */}\n\t\t\t\t\t{/* (this label is placed after the \"selected\" button\n\t\t\t\t\t     to utilize the CSS `+` selector) */}\n\t\t\t\t\t{/* If the `placeholder` wasn't specified\n\t\t\t\t\t    but `label` was and no option is currently selected\n\t\t\t\t\t    then the `label` becomes the `placeholder`\n\t\t\t\t\t    until something is selected */}\n\t\t\t\t\t{ label && (this.get_selected_option() || placeholder) &&\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor={ id }\n\t\t\t\t\t\t\tclassName={ classNames('rrui__input-label',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'rrui__input-label--required' : required && value_is_empty(value),\n\t\t\t\t\t\t\t\t'rrui__input-label--invalid'  : this.should_indicate_invalid()\n\t\t\t\t\t\t\t}) }>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</label>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* Menu toggler */}\n\t\t\t\t\t{ menu &&\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={ ref => this.menu_toggler }\n\t\t\t\t\t\t\tclassName=\"rrui__select__toggler\">\n\t\t\t\t\t\t\t{ React.cloneElement(toggler, { onClick : this.toggle }) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* The list of selectable options */}\n\t\t\t\t\t{/* Math.max(this.state.height, this.props.max_height) */}\n\t\t\t\t\t{ !native && !nativeExpanded && list_items.length > 0 &&\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tref={ ref => this.list = ref }\n\t\t\t\t\t\t\tstyle={ list_style }\n\t\t\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t'rrui__expandable',\n\t\t\t\t\t\t\t\t'rrui__expandable--overlay',\n\t\t\t\t\t\t\t\t'rrui__select__options',\n\t\t\t\t\t\t\t\t'rrui__shadow',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'rrui__select__options--menu'          : menu,\n\t\t\t\t\t\t\t\t\t'rrui__expandable--expanded'           : expanded,\n\t\t\t\t\t\t\t\t\t'rrui__select__options--expanded'      : expanded,\n\t\t\t\t\t\t\t\t\t'rrui__expandable--left-aligned'       : alignment === 'left',\n\t\t\t\t\t\t\t\t\t'rrui__expandable--right-aligned'      : alignment === 'right',\n\t\t\t\t\t\t\t\t\t'rrui__select__options--left-aligned'  : !children && alignment === 'left',\n\t\t\t\t\t\t\t\t\t'rrui__select__options--right-aligned' : !children && alignment === 'right',\n\t\t\t\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t\t\t\t'rrui__select__options--upward'        : upward,\n\t\t\t\t\t\t\t\t\t'rrui__select__options--downward'      : !upward\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) }>\n\t\t\t\t\t\t\t{ list_items }\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* Fallback in case javascript is disabled */}\n\t\t\t\t\t{ (native || (fallback && !this.state.javascript)) && this.render_static() }\n\t\t\t\t</div>\n\n\t\t\t\t{/* Error message */}\n\t\t\t\t{ this.should_indicate_invalid() &&\n\t\t\t\t\t<div className=\"rrui__input-error\">{ error }</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_list_item({ index, element, value, label, icon, overflow }) // , first, last\n\t{\n\t\tconst { disabled, menu, scrollbarPadding } = this.props\n\t\tconst { focused_option_value, expanded } = this.state\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then extract values from their props.\n\t\tif (element)\n\t\t{\n\t\t\tvalue = element.props.value\n\t\t}\n\n\t\tconst is_focused = !menu && value === focused_option_value\n\n\t\tlet item_style\n\n\t\t// on overflow the vertical scrollbar will take up space\n\t\t// reducing padding-right and the only way to fix that\n\t\t// is to add additional padding-right\n\t\t//\n\t\t// a hack to restore padding-right taken up by a vertical scrollbar\n\t\tif (overflow && scrollbarPadding)\n\t\t{\n\t\t\titem_style = { marginRight: get_scrollbar_width() + 'px' }\n\t\t}\n\n\t\tlet button\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then enhance those elements with extra props.\n\t\tif (element)\n\t\t{\n\t\t\tconst extra_props =\n\t\t\t{\n\t\t\t\tstyle     : item_style ? { ...item_style, ...element.props.style } : element.props.style,\n\t\t\t\tclassName : classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused\n\t\t\t\t\t},\n\t\t\t\t\telement.props.className\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst onClick = element.props.onClick\n\n\t\t\textra_props.onClick = (event) =>\n\t\t\t{\n\t\t\t\tif (menu)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle()\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.item_clicked(value, event)\n\t\t\t\t}\n\n\t\t\t\tif (onClick)\n\t\t\t\t{\n\t\t\t\t\tonClick(event)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbutton = React.cloneElement(element, extra_props)\n\t\t}\n\t\t// Else, if a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those options to <buttons/>\n\t\telse\n\t\t{\n\t\t\tbutton = <button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={ event => this.item_clicked(value, event) }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\ttabIndex=\"-1\"\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused,\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__select__option--disabled' : disabled\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t\tstyle={ item_style }>\n\t\t\t\t{ icon && React.cloneElement(icon, { className: classNames(icon.props.className, 'rrui__select__option-icon') }) }\n\t\t\t\t{ label }\n\t\t\t</button>\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<li\n\t\t\t\tkey={ get_option_key(value) }\n\t\t\t\tref={ ref => this.options[get_option_key(value)] = ref }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__expandable__content',\n\t\t\t\t\t'rrui__select__options-list-item',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__separator-option' : element && element.type === Select.Separator,\n\t\t\t\t\t\t'rrui__expandable__content--expanded' : expanded,\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__select__options-list-item--expanded' : expanded\n\t\t\t\t\t}\n\t\t\t\t) }>\n\t\t\t\t{ button }\n\t\t\t</li>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\t// Renders the selected option\n\t// and possibly a transparent native `<select/>` above it\n\t// so that the native `<select/>` expands upon click\n\t// on the selected option\n\t// (in case of `nativeExpanded` setting).\n\trender_selected_item()\n\t{\n\t\tconst { nativeExpanded } = this.props\n\n\t\tconst selected = this.render_selected_item_only()\n\n\t\tif (!nativeExpanded)\n\t\t{\n\t\t\treturn selected\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div style={ native_expanded_select_container_style }>\n\t\t\t\t{ this.render_static() }\n\t\t\t\t{ selected }\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_selected_item_only()\n\t{\n\t\tconst\n\t\t{\n\t\t\tchildren,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\tautocomplete,\n\t\t\tconcise,\n\t\t\ttabIndex,\n\t\t\tonFocus,\n\t\t\tinputClassName\n\t\t}\n\t\t= this.props\n\n\t\tconst\n\t\t{\n\t\t\texpanded,\n\t\t\tautocomplete_width,\n\t\t\tautocomplete_input_value\n\t\t}\n\t\t= this.state\n\n\t\tconst selected = this.get_selected_option()\n\t\tconst selected_label = this.get_selected_option_label()\n\n\t\tconst selected_text = selected ? selected_label : (placeholder || label)\n\n\t\tif (autocomplete && expanded)\n\t\t{\n\t\t\t// style = { ...style, width: autocomplete_width + 'px' }\n\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={ ref => this.autocomplete = ref }\n\t\t\t\t\tplaceholder={ selected_text }\n\t\t\t\t\tvalue={ autocomplete_input_value }\n\t\t\t\t\tonChange={ this.on_autocomplete_input_change }\n\t\t\t\t\tonKeyDown={ this.on_key_down }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\tonBlur={ this.on_blur }\n\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t(\n\t\t\t\t\t\t'rrui__input-field',\n\t\t\t\t\t\t'rrui__select__selected',\n\t\t\t\t\t\t'rrui__select__selected--autocomplete',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'rrui__select__selected--nothing'  : !selected_label,\n\t\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t\t'rrui__select__selected--expanded' : expanded,\n\t\t\t\t\t\t\t'rrui__select__selected--disabled' : disabled\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinputClassName\n\t\t\t\t\t) }/>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<button\n\t\t\t\tref={ ref => this.selected = ref }\n\t\t\t\ttype=\"button\"\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonClick={ this.toggle }\n\t\t\t\tonKeyDown={ this.on_key_down }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t\tonBlur={ this.on_blur }\n\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__input-field',\n\t\t\t\t\t'rrui__select__selected',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__input-field--invalid'      : this.should_indicate_invalid(),\n\t\t\t\t\t\t'rrui__select__selected--nothing' : !selected_label\n\t\t\t\t\t}\n\t\t\t\t) }>\n\n\t\t\t\t{/* http://stackoverflow.com/questions/35464067/flexbox-not-working-on-button-element-in-some-browsers */}\n\t\t\t\t<div className=\"rrui__select__selected-content\">\n\n\t\t\t\t\t{/* Selected option label (or icon) */}\n\t\t\t\t\t<div className=\"rrui__select__selected-label\">\n\t\t\t\t\t\t{ (concise && selected && selected.icon) ? React.cloneElement(selected.icon, { title: selected_label }) : selected_text }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* An arrow */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ classNames('rrui__select__arrow',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t\t'rrui__select__arrow--expanded': expanded\n\t\t\t\t\t\t}) }/>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\t// supports disabled javascript\n\trender_static()\n\t{\n\t\tconst\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\toptions,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tfallback,\n\t\t\tnativeExpanded,\n\t\t\tchildren\n\t\t}\n\t\t= this.props\n\n\t\tif (menu)\n\t\t{\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t({\n\t\t\t\t\t\t'rrui__rich__fallback' : fallback\n\t\t\t\t\t}) }>\n\t\t\t\t\t{toggler}\n\t\t\t\t</div>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<select\n\t\t\t\tref={ ref => this.native = ref }\n\t\t\t\tid={ id }\n\t\t\t\tname={ name }\n\t\t\t\tvalue={ value_is_empty(value) ? Empty_value_option_value : value }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonChange={ this.native_select_on_change }\n\t\t\t\tclassName={ classNames('rrui__input', 'rrui__select__native',\n\t\t\t\t{\n\t\t\t\t\t'rrui__select__native-expanded' : nativeExpanded,\n\t\t\t\t\t'rrui__rich__fallback'          : fallback\n\t\t\t\t}) }>\n\t\t\t\t{\n\t\t\t\t\toptions\n\t\t\t\t\t?\n\t\t\t\t\tthis.render_native_select_options(options, value_is_empty(value))\n\t\t\t\t\t:\n\t\t\t\t\tReact.Children.map(children, (child) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!child)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst markup =\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\t\t\t\tkey={ child.props.value }\n\t\t\t\t\t\t\t\tvalue={ child.props.value }>\n\t\t\t\t\t\t\t\t{ child.props.label }\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\treturn markup\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</select>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_native_select_options(options, empty_option_is_selected)\n\t{\n\t\tconst { placeholder } = this.props\n\n\t\tlet empty_option_present = false\n\n\t\tconst rendered_options = options.map((option) =>\n\t\t{\n\t\t\tlet { value, label } = option\n\n\t\t\tif (value_is_empty(value))\n\t\t\t{\n\t\t\t\tempty_option_present = true\n\t\t\t\tvalue = Empty_value_option_value\n\t\t\t}\n\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<option\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\tkey={ get_option_key(value) }\n\t\t\t\t\tvalue={ value }>\n\t\t\t\t\t{ label }\n\t\t\t\t</option>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t})\n\n\t\tif (empty_option_is_selected && !empty_option_present)\n\t\t{\n\t\t\trendered_options.unshift\n\t\t\t(\n\t\t\t\t<option\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\tkey={ get_option_key(undefined) }\n\t\t\t\t\tvalue=\"\">\n\t\t\t\t\t{ placeholder }\n\t\t\t\t</option>\n\t\t\t)\n\t\t}\n\n\t\treturn rendered_options\n\t}\n\n\t// Whether should indicate that the input value is invalid\n\tshould_indicate_invalid()\n\t{\n\t\tconst { indicateInvalid, error } = this.props\n\n\t\treturn indicateInvalid && error\n\t}\n\n\tnative_select_on_change = (event) =>\n\t{\n\t\tconst { onChange } = this.props\n\n\t\tlet value = event.target.value\n\n\t\t// Convert back from an empty string to `undefined`\n\t\tif (value === Empty_value_option_value)\n\t\t{\n\t\t\t// `null` is not accounted for, use `undefined` instead.\n\t\t\tvalue = undefined\n\t\t}\n\n\t\tonChange(value)\n\t}\n\n\tresize_native_expanded_select = () =>\n\t{\n\t\t// For some strange reason 1px on the right side of the `<select/>`\n\t\t// still falls through to the underlying selected option label.\n\t\tReactDOM.findDOMNode(this.native).style.width = (ReactDOM.findDOMNode(this.selected).offsetWidth + 1) + 'px'\n\t}\n\n\tget_selected_option()\n\t{\n\t\tconst { value } = this.props\n\n\t\treturn this.get_option(value)\n\t}\n\n\tget_option(value)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.filter(x => x.value === value)[0]\n\t\t}\n\n\t\tlet option\n\n\t\tReact.Children.forEach(children, function(child)\n\t\t{\n\t\t\tif (child.props.value === value)\n\t\t\t{\n\t\t\t\toption = child\n\t\t\t}\n\t\t})\n\n\t\treturn option\n\t}\n\n\tget_option_index(option)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.indexOf(option)\n\t\t}\n\n\t\tlet option_index\n\n\t\tReact.Children.forEach(children, function(child, index)\n\t\t{\n\t\t\tif (child.props.value === option.value)\n\t\t\t{\n\t\t\t\toption_index = index\n\t\t\t}\n\t\t})\n\n\t\treturn option_index\n\t}\n\n\tget_selected_option_label()\n\t{\n\t\tconst { options } = this.props\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tif (!selected)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (options)\n\t\t{\n\t\t\treturn selected.label\n\t\t}\n\n\t\treturn selected.props.label\n\t}\n\n\toverflown()\n\t{\n\t\tconst { options, maxItems } = this.props\n\n\t\treturn options.length > maxItems\n\t}\n\n\tscrollable_list_height(state = this.state)\n\t{\n\t\tconst { maxItems } = this.props\n\n\t\t// (Adding vertical padding so that it shows these `maxItems` options fully)\n\t\treturn (state.height - 2 * state.vertical_padding) * (maxItems / this.get_options().length) + state.vertical_padding\n\t}\n\n\tshould_animate()\n\t{\n\t\treturn true\n\n\t\t// return this.props.options.length >= this.props.transition_item_count_min\n\t}\n\n\tfocus()\n\t{\n\t\tif (this.autocomplete)\n\t\t{\n\t\t\tthis.autocomplete.focus()\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selected.focus()\n\t\t}\n\t}\n\n\ttoggle = (event, toggle_options = {}) =>\n\t{\n\t\tif (event)\n\t\t{\n\t\t\t// Don't navigate away when clicking links\n\t\t\tevent.preventDefault()\n\n\t\t\t// Not discarding the click event because\n\t\t\t// other expanded selects may be listening to it.\n\t\t\t// // Discard the click event so that it won't reach `document` click listener\n\t\t\t// event.stopPropagation() // doesn't work\n\t\t\t// event.nativeEvent.stopImmediatePropagation()\n\t\t}\n\n\t\tconst\n\t\t{\n\t\t\tmenu,\n\t\t\tdisabled,\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tvalue,\n\t\t\tfocusUponSelection,\n\t\t\tonToggle,\n\t\t\tnativeExpanded\n\t\t}\n\t\t= this.props\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (disabled)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tif (!expanded && autocomplete)\n\t\t{\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\t// The input value can't be `undefined`\n\t\t\t\t// because in that case React would complain\n\t\t\t\t// about it being an \"uncontrolled input\"\n\t\t\t\tautocomplete_input_value : '',\n\t\t\t\tmatching_options         : options\n\t\t\t})\n\n\t\t\t// if (!this.state.autocomplete_width)\n\t\t\t// {\n\t\t\t// \tthis.setState({ autocomplete_width: this.get_widest_label_width() })\n\t\t\t// }\n\t\t}\n\n\t\t// Deferring expanding the select upon click\n\t\t// because document.onClick should finish first,\n\t\t// otherwise `event.target` may be detached from the DOM\n\t\t// and it would immediately toggle back to collapsed state.\n\t\tsetTimeout(() =>\n\t\t{\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\texpanded: !expanded\n\t\t\t})\n\n\t\t\tif (!expanded && options)\n\t\t\t{\n\t\t\t\t// Focus either the selected option\n\t\t\t\t// or the first option in the list.\n\n\t\t\t\tconst focused_option_value = value || options[0].value\n\n\t\t\t\tthis.setState({ focused_option_value })\n\n\t\t\t\t// Scroll down to the focused option\n\t\t\t\tthis.scroll_to(focused_option_value)\n\t\t\t}\n\n\t\t\t// If it's autocomplete, then focus <input/> field\n\t\t\t// upon toggling the select component.\n\t\t\tif (!toggle_options.dont_focus_after_toggle)\n\t\t\t{\n\t\t\t\tif (autocomplete)\n\t\t\t\t{\n\t\t\t\t\tif (!expanded || (expanded && focusUponSelection))\n\t\t\t\t\t{\n\t\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Focus the toggler\n\t\t\t\t\t\t\tif (expanded)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.autocomplete.focus()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t0)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// For some reason Firefox loses focus\n\t\t\t\t\t// upon select expansion via a click,\n\t\t\t\t\t// so this extra `.focus()` works around that issue.\n\t\t\t\t\tif (!menu)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onToggle)\n\t\t\t{\n\t\t\t\tonToggle(!expanded)\n\t\t\t}\n\n\t\t\tif (toggle_options.callback)\n\t\t\t{\n\t\t\t\ttoggle_options.callback()\n\t\t\t}\n\t\t},\n\t\t0)\n\t}\n\n\titem_clicked(value, event)\n\t{\n\t\tif (event)\n\t\t{\n\t\t\tevent.preventDefault()\n\t\t}\n\n\t\tconst { onChange } = this.props\n\n\t\tthis.toggle(undefined, { callback: () => onChange(value) })\n\t}\n\n\tdocument_clicked = (event) =>\n\t{\n\t\tconst autocomplete = ReactDOM.findDOMNode(this.autocomplete)\n\t\tconst selected_option = ReactDOM.findDOMNode(this.selected)\n\t\tconst options_list = ReactDOM.findDOMNode(this.list)\n\n\t\t// Don't close the select if its expander button has been clicked,\n\t\t// or if autocomplete has been clicked,\n\t\t// or if an option was selected from the list.\n\t\tif (options_list && options_list.contains(event.target)\n\t\t\t|| (autocomplete && autocomplete.contains(event.target))\n\t\t\t|| (selected_option && selected_option.contains(event.target)))\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tthis.setState({ expanded: false })\n\n\t\tconst { onToggle } = this.props\n\n\t\tif (onToggle)\n\t\t{\n\t\t\tonToggle(false)\n\t\t}\n\t}\n\n\t// Would have used `onBlur={...}` event handler here\n\t// with `if (container.contains(event.relatedTarget))` condition,\n\t// but it doesn't work in IE in React.\n\t// https://github.com/facebook/react/issues/3751\n\t//\n\t// Therefore, using the hacky `document.onClick` handlers\n\t// and this `onKeyDown` Tab handler\n\t// until `event.relatedTarget` support is consistent in React.\n\t//\n\ton_key_down_in_container = (event) =>\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tswitch (event.keyCode)\n\t\t{\n\t\t\t// Toggle on Tab out\n\t\t\tcase 9:\n\t\t\t\tif (expanded)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle(undefined, { dont_focus_after_toggle: true })\n\n\t\t\t\t\tconst { onTabOut } = this.props\n\n\t\t\t\t\tif (onTabOut)\n\t\t\t\t\t{\n\t\t\t\t\t\tonTabOut(event)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn\n\t\t}\n\t}\n\n\ton_key_down = (event) =>\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { options, value, autocomplete } = this.props\n\t\tconst { expanded, focused_option_value } = this.state\n\n\t\t// Maybe add support for `children` arrow navigation in future\n\t\tif (options)\n\t\t{\n\t\t\tswitch (event.keyCode)\n\t\t\t{\n\t\t\t\t// Select the previous option (if present) on up arrow\n\t\t\t\tcase 38:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst previous = this.previous_focusable_option()\n\n\t\t\t\t\tif (previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(previous.value, 'top')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: previous.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Select the next option (if present) on down arrow\n\t\t\t\tcase 40:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst next = this.next_focusable_option()\n\n\t\t\t\t\tif (next)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(next.value, 'bottom')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: next.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Collapse on Escape\n\t\t\t\t//\n\t\t\t\t// Maybe add this kind of support for \"Escape\" key in some future:\n\t\t\t\t//  hiding the item list, cancelling current item selection process\n\t\t\t\t//  and restoring the selection present before the item list was toggled.\n\t\t\t\t//\n\t\t\t\tcase 27:\n\t\t\t\t\t// Collapse the list if it's expanded\n\t\t\t\t\tif (this.state.expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.toggle()\n\n\t\t\t\t\t\t// Restore focus when the list is collapsed\n\t\t\t\t\t\tsetTimeout\n\t\t\t\t\t\t(() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t0)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Enter\n\t\t\t\tcase 13:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t// If an item is focused\n\t\t\t\t\t\t// (which may not be a case\n\t\t\t\t\t\t//  when autocomplete is matching no items)\n\t\t\t\t\t\t// (still for non-autocomplete select\n\t\t\t\t\t\t//  it is valid to have a default option)\n\t\t\t\t\t\tif (this.get_options() && this.get_options().length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Choose the focused item\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t\t// And collapse the select\n\t\t\t\t\t\t\tthis.toggle()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Else it should have just submitted the form on Enter,\n\t\t\t\t\t// but it wouldn't because the select element activator is a <button/>\n\t\t\t\t\t// therefore hitting Enter while being focused on it just pushes that button.\n\t\t\t\t\t// So submit the enclosing form manually.\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (submit_parent_form(ReactDOM.findDOMNode(this.select)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Spacebar\n\t\t\t\tcase 32:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\t// only if it it's an `options` select\n\t\t\t\t\t\t// and also if it's not an autocomplete\n\t\t\t\t\t\tif (this.get_options() && !autocomplete)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t\t// `focused_option_value` could be non-existent\n\t\t\t\t\t\t\t// in case of `autocomplete`, but since\n\t\t\t\t\t\t\t// we're explicitly not handling autocomplete here\n\t\t\t\t\t\t\t// it is valid to select any options including the default ones.\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t\tthis.toggle()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Otherwise, the spacebar keydown event on a `<button/>`\n\t\t\t\t\t// will trigger `onClick` and `.toggle()` will be called.\n\n\t\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\t// This handler is a workaround for `redux-form`\n\ton_blur = (event) =>\n\t{\n\t\tconst { onBlur, value } = this.props\n\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\n\t\t// so that it gets the right (parsed, not the formatted one)\n\t\t// `event.target.value` in its `onBlur` handler.\n\t\tif (onBlur)\n\t\t{\n\t\t\tconst _event =\n\t\t\t{\n\t\t\t\t...event,\n\t\t\t\ttarget:\n\t\t\t\t{\n\t\t\t\t\t...event.target,\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `redux-form` event detection.\n\t\t\t// https://github.com/erikras/redux-form/blob/v5/src/events/isEvent.js\n\t\t\t_event.stopPropagation = event.stopPropagation\n\t\t\t_event.preventDefault  = event.preventDefault\n\n\t\t\tonBlur(_event)\n\t\t}\n\t}\n\n\tget_options()\n\t{\n\t\tconst { autocomplete, autocompleteShowAll, maxItems, options } = this.props\n\t\tconst { matching_options } = this.state\n\n\t\tif (!autocomplete)\n\t\t{\n\t\t\treturn options\n\t\t}\n\n\t\tif (autocompleteShowAll)\n\t\t{\n\t\t\treturn matching_options\n\t\t}\n\n\t\treturn matching_options.slice(0, maxItems)\n\t}\n\n\t// Get the previous option (relative to the currently focused option)\n\tprevious_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i - 1 >= 0)\n\t\t\t\t{\n\t\t\t\t\treturn options[i - 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Get the next option (relative to the currently focused option)\n\tnext_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i + 1 < options.length)\n\t\t\t\t{\n\t\t\t\t\treturn options[i + 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Scrolls to an option having the value\n\tscroll_to(value)\n\t{\n\t\tconst { vertical_padding } = this.state\n\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\n\t\tconst list = ReactDOM.findDOMNode(this.list)\n\n\t\t// If this option isn't even shown\n\t\t// (e.g. autocomplete)\n\t\t// then don't scroll to it because there's nothing to scroll to.\n\t\tif (!option_element)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tlet offset_top = option_element.offsetTop\n\n\t\tconst is_first_option = list.firstChild === option_element\n\n\t\t// If it's the first one - then scroll to list top\n\t\tif (is_first_option)\n\t\t{\n\t\t\toffset_top -= vertical_padding\n\t\t}\n\n\t\tlist.scrollTop = offset_top\n\t}\n\n\t// Fully shows an option having the `value` (scrolls to it if neccessary)\n\tshow_option(value, gravity)\n\t{\n\t\tconst { vertical_padding } = this.state\n\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\n\t\tconst list = ReactDOM.findDOMNode(this.list)\n\n\t\tconst is_first_option = list.firstChild === option_element\n\t\tconst is_last_option  = list.lastChild === option_element\n\n\t\tswitch (gravity)\n\t\t{\n\t\t\tcase 'top':\n\t\t\t\tlet top_line = option_element.offsetTop\n\n\t\t\t\tif (is_first_option)\n\t\t\t\t{\n\t\t\t\t\ttop_line -= vertical_padding\n\t\t\t\t}\n\n\t\t\t\tif (top_line < list.scrollTop)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = top_line\n\t\t\t\t}\n\n\t\t\t\treturn\n\n\t\t\tcase 'bottom':\n\t\t\t\tlet bottom_line = option_element.offsetTop + option_element.offsetHeight\n\n\t\t\t\tif (is_last_option)\n\t\t\t\t{\n\t\t\t\t\tbottom_line += vertical_padding\n\t\t\t\t}\n\n\t\t\t\tif (bottom_line > list.scrollTop + list.offsetHeight)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = bottom_line - list.offsetHeight\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t}\n\t}\n\n\t// Calculates height of the expanded item list\n\tcalculate_height()\n\t{\n\t\tconst { options } = this.props\n\n\t\tconst list_dom_node = ReactDOM.findDOMNode(this.list)\n\t\tconst border = parseInt(window.getComputedStyle(list_dom_node).borderTopWidth)\n\t\tconst height = list_dom_node.scrollHeight\n\n\t\tconst vertical_padding = parseInt(window.getComputedStyle(list_dom_node).paddingTop)\n\n\t\t// For things like \"accordeon\".\n\t\t//\n\t\t// const images = list_dom_node.querySelectorAll('img')\n\t\t//\n\t\t// if (images.length > 0)\n\t\t// {\n\t\t// \treturn this.preload_images(list_dom_node, images)\n\t\t// }\n\n\t\tconst state = { height, vertical_padding, border }\n\n\t\tif (this.is_scrollable() && options && this.overflown())\n\t\t{\n\t\t\tstate.list_height = this.scrollable_list_height(state)\n\t\t}\n\n\t\tthis.setState(state)\n\t}\n\n\tis_scrollable()\n\t{\n\t\tconst { menu, autocomplete, autocompleteShowAll, scroll } = this.props\n\n\t\treturn !menu && (autocomplete && autocompleteShowAll || !autocomplete) && scroll\n\t}\n\n\t// This turned out not to work for `autocomplete`\n\t// because not all options are ever shown.\n\t// get_widest_label_width()\n\t// {\n\t// \t// <ul/> -> <li/> -> <button/>\n\t// \tconst label = ReactDOM.findDOMNode(this.list).firstChild.firstChild\n\t//\n\t// \tconst style = getComputedStyle(label)\n\t//\n\t// \tconst width = parseFloat(style.width)\n\t// \tconst side_padding = parseFloat(style.paddingLeft)\n\t//\n\t// \treturn width - 2 * side_padding\n\t// }\n\n\tget_matching_options(options, value)\n\t{\n\t\t// If the autocomplete value is `undefined` or empty\n\t\tif (!value)\n\t\t{\n\t\t\treturn options\n\t\t}\n\n\t\tvalue = value.toLowerCase()\n\n\t\treturn options.filter(({ label, verbose }) =>\n\t\t{\n\t\t\treturn (verbose || label).toLowerCase().indexOf(value) >= 0\n\t\t})\n\t}\n\n\ton_autocomplete_input_change = (event) =>\n\t{\n\t\tconst { options } = this.props\n\t\tconst input = event.target.value\n\t\tconst matching_options = this.get_matching_options(options, input)\n\n\t\tthis.setState\n\t\t({\n\t\t\tautocomplete_input_value: input,\n\t\t\tmatching_options,\n\t\t\tfocused_option_value: matching_options.length > 0 ? matching_options[0].value : undefined\n\t\t})\n\t}\n\n\t// // https://github.com/daviferreira/react-sanfona/blob/master/src/AccordionItem/index.jsx#L54\n\t// // Wait for images to load before calculating maxHeight\n\t// preload_images(node, images)\n\t// {\n\t// \tlet images_loaded = 0\n\t//\n\t// \tconst image_loaded = () =>\n\t// \t{\n\t// \t\timages_loaded++\n\t//\n\t// \t\tif (images_loaded === images.length)\n\t// \t\t{\n\t// \t\t\tthis.setState\n\t// \t\t\t({\n\t// \t\t\t\theight: this.props.expanded ? node.scrollHeight : 0\n\t// \t\t\t})\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tfor (let i = 0; i < images.length; i += 1)\n\t// \t{\n\t// \t\tconst image = new Image()\n\t// \t\timage.src = images[i].src\n\t// \t\timage.onload = image.onerror = image_loaded\n\t// \t}\n\t// }\n}\n\nSelect.Separator = function(props)\n{\n\treturn <div className=\"rrui__select__separator\"/>\n}\n\nconst native_expanded_select_container_style =\n{\n\tdisplay : 'inline-block'\n}\n\n// There can be an `undefined` value,\n// so just `{ value }` won't do here.\nfunction get_option_key(value)\n{\n\treturn value_is_empty(value) ? '@@rrui/select/undefined' : value\n}\n\nfunction value_is_empty(value)\n{\n\treturn value === null || value === undefined\n}"]}